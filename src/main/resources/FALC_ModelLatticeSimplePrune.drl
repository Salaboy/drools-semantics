package org.drools.semantics.lang.dl

import org.drools.base.DroolsQuery;
import org.semanticweb.owlapi.model.*;
import org.drools.semantics.builder.model.*;
import org.drools.semantics.builder.model.OntoModel;
import org.drools.semantics.builder.*;
import org.drools.semantics.lang.dl.templates.*;
import org.drools.semantics.builder.DLFactory;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.HashMap;
import java.io.InputStream;
import java.io.IOException;
import org.mvel2.templates.*;


global OntoModel latticeModel;



declare Mark
	arg			: SubConceptOf	@key
end






query subConceptOf( SubConceptOf $link, String $sub, String $sup )
    $link := SubConceptOf( $sub, "subConceptOf", $sup ; )
end


























/**
    Remove redundancies, marking useless edges
*/
rule "Prune"
salience -10000
when
	$l : SubConceptOf( $i : subject, $j : object != "<Thing>" )

	    $x1 : SubConceptOf( subject == $i , $o : object != $j, object != "<Thing>", enabled == true )

		$x2 : SubConceptOf( subject == $o, object == $j, object != "<Thing>", enabled == true )

    not Mark( $l ; )
    not SubConceptOf( subject == $j, object == $o )
then
    System.err.println( " ******************* RETRACT " + $l + " thanks to " + $x1 + " and " + $x2 );
	Mark m = new Mark( $l );

	insert(m);
end


/**
    Clear marked edges
*/
rule "Clear"
salience -100000
when
	$sc : SubConceptOf()
	$m1 : Mark( arg == $sc )
then
    System.err.println( " ******************* REALLY RETRACT " + $sc );
    latticeModel.removeSubConceptOf( $sc );
	retract($sc);
	retract($m1);
end














//rule "Cleanup"
//salience -99999
//when
//    $b : Blocker()
//then
//    retract( $b );
//end









