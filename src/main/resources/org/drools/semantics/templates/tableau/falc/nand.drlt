

@declare{'nandTemplate'}

/********************************************************************************/

rule "NAND_@{id}"
salience -70
when
	$test : DLTest( $prob : problem )
	$t : HypoType( goal == $test , $xlab : label,
			       $x : subject, object == "@{id}")
	$d : Degree( subject == $t , $l : value )	
then
//	System.out.println(" Rule NAND ** @{id} -> @{children} ************ " );

	String[] klazz = new String[] { @foreach{ child : children } "@{negate( child )}" @end{','} };
	Object[] vars = new Object[klazz.length];
		
	for (int j = 0; j < klazz.length; j++) {
 		HypoType t = new HypoType( $x, klazz[j], false, $test );
		vars[j] = ConstraintFactory.newUnitIntervalVariable( "x_"+t.getLabel(), $prob );
 		Degree d = new Degree( t, vars[j] );

		System.out.println(" \t\t" + t.toString() + " /  " + vars[j] );
																						 		 		 
		insertLogical( t );
		insertLogical( d );
	}
		
	Object y = ConstraintFactory.newBooleanVariable( "y_@{id}", $prob);
	ConstraintFactory.addOrConstraint( vars, y, $l, $prob );
end

/********************************************************************************/

@end{}

@includeNamed{'nandTemplate'}